package com.eleksploded.lavadynamics;

import java.util.Random;

import net.minecraft.init.Blocks;
import net.minecraft.util.math.BlockPos;
import net.minecraft.world.World;
import net.minecraft.world.chunk.Chunk;
import net.minecraft.world.gen.feature.WorldGenLakes;
import net.minecraftforge.event.world.ChunkEvent;
import net.minecraftforge.fml.common.Mod;

@Mod.EventBusSubscriber
public class Volcano {
	
	
	public void OnChunkLoad(ChunkEvent.Load event) {
		//Get saved value for tested chunks
		VolcanoData data = VolcanoData.get(event.getWorld());
		//Get Chunk that was loaded
		Chunk chunk = event.getChunk();
		//Check if chunk is tested already
		if(!data.isChunkTested(chunk)){
			Random rand = new Random();
			//Random Chance to spawn a Volcano
			if(rand.nextInt(100)+1 <= Config.volcanoChance) {
				//Spawn a volcano
				genVolcano(chunk, event.getWorld());
			}
		}
	}

	public static void genVolcano(Chunk chunk, World world) {
		//----------Setup----------//
		
		boolean debug = Config.genVolcanoDebug;
		Random rand = new Random(world.getSeed());
		//Get the center of the chunk
		int x = (chunk.getPos().getXEnd() - chunk.getPos().getXStart())/2 + chunk.getPos().getXStart();
		int z = (chunk.getPos().getZEnd() - chunk.getPos().getZStart())/2 + chunk.getPos().getZStart();		
		//Get random y level based on config value
		int y = Config.volcanoYLevel + (rand.nextInt(5) - 2);
		//Get center of chunk into BlockPos
		BlockPos center = new BlockPos(x,y,z);
		
		if(debug) {
			LavaDynamics.Logger.debug("Center Location is " + center);
		}
		
		//----------Lava Lake----------//
		
		//Generate new Lava lake at chunk center
		WorldGenLakes lakes = new WorldGenLakes(Blocks.LAVA);
		lakes.generate(world, rand, center);
		if(debug) {
			LavaDynamics.Logger.debug("Lava lake generated");
		}
		
		//----------Lava Pillar---------//
		
		if(debug) {
			LavaDynamics.Logger.debug("Generating Lava Pillar");
		}
		
		//Get hight and set pillar
		int height = chunk.getHeightValue(x, z) - center.getY();
		for(int i = 0; i == height; i++) {
			if(debug) {
				LavaDynamics.Logger.debug("Placing Lava at y=" + center.getY() + i);
			}
			world.setBlockState(new BlockPos(x,center.getY() + i,z), Blocks.LAVA.getDefaultState());
		}
	}
}
